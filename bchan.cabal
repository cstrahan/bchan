name: bchan
version: 0.0.0.1
cabal-version: >=1.10
build-type: Simple
license: MIT
license-file: LICENSE
copyright: Copyright (C) 2016 Charles Strahan
maintainer: charles@cstrahan.com
homepage: http://github.com/cstrahan/bounded-chan
bug-reports: http://github.com/cstrahan/bounded-chan/issues
synopsis: Go-style channels
category: Concurrency
author: Charles Strahan
extra-source-files:
    .gitignore

source-repository head
    type: git
    location: git://github.com/cstrahan/bounded-chan.git

library
    exposed-modules:
        Control.Concurrent.BoundedChan
    build-depends:
        base >=4 && <5,
        array -any,
        random -any,
        vector -any,
        vector-algorithms -any,
        primitive -any,
        ghc-prim -any
    default-language: Haskell2010
    hs-source-dirs: src
    ghc-options: -O2

executable bench
    main-is: Main.hs
    build-depends:
        base >=4 && <5,
        criterion -any,
        bchan -any
    default-language: Haskell98
    hs-source-dirs: bench
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -O2

executable weight
    main-is: Main.hs
    build-depends:
        base >=4 && <5,
        weigh -any,
        bchan -any
    default-language: Haskell98
    hs-source-dirs: weight
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -O2

test-suite fuzz
    type: exitcode-stdio-1.0
    main-is: Main.hs
    build-depends:
        base >=4 && <5,
        hspec -any,
        hspec-core -any,
        hspec-core -any,
        bchan -any
    default-language: Haskell2010
    hs-source-dirs: fuzz
    ghc-options: -Wall
